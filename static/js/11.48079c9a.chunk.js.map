{"version":3,"sources":["utils/metro.js","components/Catalog/CatalogItem.js","components/Catalog/filters/Metros.js","components/Catalog/CatalogItemSceleton.js","components/Catalog/filters/Regions.js","components/Catalog/filters/Filters.js","components/public/DynamicFiltersPane.js","components/Catalog/index.js"],"names":["getMetroSym","color","Photos","data","apartmentId","showIndicators","showStatus","showThumbs","infiniteLoop","swipeable","map","el","url","formats","small","to","routes","APARTMENT","CarouselContent","BackgroundImage","src","process","CarouselImage","_id","inject","observer","apartment","userStore","uiStore","price","photos","currency","moderated","metro","address","ContentCard","header","VerifiedMark","title","Content","role","onClick","e","preventDefault","isLogged","user","addLikedApartment","openLoginModal","className","liked_apartments","includes","name","styled","Card","img","div","props","theme","colors","text","important","span","stationTemplate","option","filtersMW","SelectMetros","value","metroStations","options","metros","optionLabel","placeholder","itemTemplate","onChange","setMetroStations","maxSelectedLabels","selectedItemsLabel","MultiSelect","SNIPPETS","noOutline","CatalogItemSceleton","height","width","selectedRegionTemplate","regionTemplate","useState","filteredRegions","setFilteredRegions","SelectRegions","regions","suggestions","completeMethod","filter","region","toLowerCase","query","trim","field","multiple","dropdown","selectedItemTemplate","setRegions","AutoComplete","apartmentTypeTemplate","loadApartments","FiltersContainer","apartmentTypes","apartmentType","setApartmentType","city","Metros","InputWrapper","CheckboxWrapper","checked","roomCount","setRoomCount","style","marginTop","prices","min","max","maxPrice","setPrice","step","range","InputGroup","suffix","showButtons","AccordionWrapper","activeIndex","isAdditionalFiltersExpanded","onTabChange","toggleAdditionalFilters","InputWrapperWithFloatLabel","id","setAddress","htmlFor","square","setMinSquare","setMaxSquare","SwitchInputWrapper","onlyModerated","setOnlyModerated","withVideo","setWithVideo","primary","main","hover","attrs","general","Accordion","label","children","Container","FloatingButton","toggleFilters","SidebarPanel","visible","isFiltersVisible","onHide","Sidebar","button","sceletons","Array","fill","catalogStore","containerRef","useRef","useEffect","apartments","length","loadApartmentsFromAPI","ref","ApartmentsContainer","state","CatalogItem","apartmentsCount","limit","PaginatorContainer","first","offset","rows","totalRecords","rowsPerPageOptions","onPageChange","window","scrollTo","setPageData","consts","containerWidth"],"mappings":"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","file":"static/js/11.48079c9a.chunk.js","sourcesContent":["export function getMetroSym(color) {\n    switch (color) {\n        case 'red': return \"🔴\";\n        case 'green': return \"🟢\";\n        case 'blue': return \"🔵\";\n        default: return ''\n    }\n}","import React from 'react';\nimport { Card } from \"primereact/card\";\nimport { Link } from \"react-router-dom\";\nimport { Carousel } from 'react-responsive-carousel';\nimport { routes } from \"consts/routes\";\nimport styled from 'styled-components';\nimport { getMetroSym } from \"utils/metro\";\nimport {inject, observer} from \"mobx-react\";\n\nconst Photos = ({data, apartmentId}) => (<Carousel showIndicators={false} showStatus={false} showThumbs={false} infiniteLoop swipeable>\n    {data.map(el => {\n        const url = el.formats ? el.formats.small ? el.formats.small.url : el.url : el.url;\n        return (\n            <Link to={routes.APARTMENT + apartmentId} key={el._id}>\n                <CarouselContent>\n                    <BackgroundImage src={process.env.REACT_APP_DOMAIN_URL + url} />\n                    <CarouselImage src={process.env.REACT_APP_DOMAIN_URL + url} />\n                </CarouselContent>\n            </Link>\n        )\n    })}\n</Carousel>)\n\nconst CatalogItem = ({ apartment, userStore, uiStore }) => {\n    const { _id, price, photos, currency, moderated, metro, address } = apartment;\n\n    return (\n        <ContentCard header={<Photos data={photos} apartmentId={_id}/>}>\n            {moderated && <VerifiedMark title=\"Перевірена квартира\" />}\n            <Link to={routes.APARTMENT + _id}>\n                <Content>\n                    <p><b>{price}</b> {currency} / міс.</p>\n                    <div role=\"button\" onClick={e => {\n                        e.preventDefault();\n                        if (userStore.isLogged) {\n                            userStore.user.addLikedApartment(_id)\n                        } else uiStore.openLoginModal();\n                    }}><i className={`bx bx${userStore.user.liked_apartments.includes(_id) ? 's':''}-heart`}/></div>\n                    <p className=\"small\">{address || 'Адресу не вказали 😔'}</p>\n                    <span/>\n                    {metro && <p className=\"small metro\"><span>{getMetroSym(metro.color)}</span> {metro.name}</p>}\n                </Content>\n            </Link>\n        </ContentCard>\n    )\n}\n\nexport default inject('userStore', 'uiStore')(observer(CatalogItem));\n\nconst ContentCard = styled(Card)`\n  max-width: 250px;\n  max-height: 400px;\n  position: relative;\n  .carousel .slide {\n    background: none;\n  }\n  a {\n    text-decoration: none !important;\n  }\n  &:hover {\n    box-shadow: 0 0 4px 4px #ccc;\n  }\n`;\n\nconst CarouselImage = styled.img`\n  object-fit: contain;\n  height: 200px;\n  position: absolute;\n  z-index: 1;  \n  transform: translate3d(-50%, 0, 0);\n\n`;\n\nconst BackgroundImage = styled.img`\n  position: absolute;\n  top: 0;\n  left: -100%;\n  filter: blur(2px);\n  width: 100%;\n  height: 100%;\n  z-index: 0;\n  transform: translate3d(50%, 0, 0);\n\n`;\n\nconst CarouselContent = styled.div`\n  min-width: 250px;\n  position: relative;\n  height: 200px;\n`;\n\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 40px;\n  grid-auto-rows: auto;\n  color: ${props => props.theme.colors.text.important};\n  p {margin: 5px;}\n  b {font-weight: 700;}\n  i {\n    font-size: 1.1rem;\n    cursor: pointer;\n  }\n  .small {font-size: .8rem;}\n  .metro span {line-height: 1.2rem}\n  div[role=\"button\"] {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst VerifiedMark = styled.span`\n  background: #2ecf13;\n  height: 12px;\n  width: 12px;\n  display: block;\n  border-radius: 50%;\n  position: absolute;\n  z-index: 1000;\n  right: 10px;\n  top: 180px;\n`;","import React from 'react';\nimport { MultiSelect } from \"primereact/multiselect\";\nimport { getMetroSym } from \"utils/metro\";\nimport styled from 'styled-components';\nimport { inject, observer } from \"mobx-react\";\nimport { SNIPPETS } from \"consts/styles\";\n\nconst stationTemplate = option => (<span>{getMetroSym(option.color)} {option.name}</span>)\n\nconst Metros = ({ filtersMW, uiStore }) => {\n\n    return (\n        <SelectMetros\n            value={filtersMW.metroStations}\n            options={uiStore.metros}\n            optionLabel=\"name\"\n            placeholder=\"Станція метро\"\n            itemTemplate={stationTemplate}\n            onChange={filtersMW.setMetroStations}\n            maxSelectedLabels={3}\n            selectedItemsLabel=\"{0} станцій обрано\"\n        />\n    );\n}\n\nexport default inject('filtersMW', 'uiStore')(observer(Metros));\n\nconst SelectMetros = styled(MultiSelect)`\n    width: 100%;\n    font-size: .8rem !important;\n  \n    ul {\n    ${ SNIPPETS.noOutline };\n    box-shadow: none !important;\n    width: 100%;\n    li {\n      font-size: .8rem !important;\n    }\n    }\n`;","import React from 'react';\nimport { Card } from \"primereact/card\";\nimport styled from 'styled-components';\nimport { Skeleton } from 'primereact/skeleton';\n\nconst CatalogItemSceleton = () => {\n\n    return (\n        <ContentCard header={<Skeleton height=\"200px\" width=\"100%\"/>}>\n            <Content>\n                <Skeleton height=\"25px\"/>\n                <div><i className=\"bx bx-heart\"/></div>\n                <Skeleton height=\"19px\"/>\n                <span/>\n                <Skeleton height=\"19px\"/>\n            </Content>\n        </ContentCard>\n    )\n}\n\nexport default CatalogItemSceleton;\n\nconst ContentCard = styled(Card)`\n  width: 250px;\n  .carousel .slide {\n    background: none;\n  }\n  a {\n    text-decoration: none !important;\n  }\n  &:hover {\n    box-shadow: 0 0 4px 4px #ccc;\n  }\n`;\n\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 40px;\n  grid-auto-rows: auto;\n  color: ${props => props.theme.colors.text.important};\n  grid-gap: 12px 0;\n  p {margin: 5px;}\n  b {font-weight: 700;}\n  i {\n    font-size: 1.1rem;\n    cursor: pointer;\n  }\n  .small {font-size: .8rem;}\n  .metro span {line-height: 1.2rem}\n  div[role=\"button\"] {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;","import React, { useState } from 'react';\nimport { AutoComplete } from \"primereact/autocomplete\";\nimport { getMetroSym } from \"utils/metro\";\nimport styled from 'styled-components';\nimport { inject, observer } from \"mobx-react\";\nimport { SNIPPETS } from \"consts/styles\";\n\nconst selectedRegionTemplate = (option, props) => {\n    if (option) return (\n        <span className=\"p-autocomplete-token-label\">\n            {getMetroSym(option.color)} {option.name}\n        </span>\n    );\n    return (<span>{props.placeholder}</span>);\n}\n\nconst regionTemplate = option => (<span>{option.name}</span>)\n\nconst Regions = ({ filtersMW, uiStore }) => {\n\n    const [ filteredRegions, setFilteredRegions ] = useState(uiStore.metros);\n\n    const searchRegion = e => {\n        setFilteredRegions(uiStore.regions.filter(region =>\n            region.name.toLowerCase().includes(e.query.trim().toLowerCase()))\n        );\n    }\n\n    return (\n        <SelectRegions\n            className=\"region-input\"\n            value={filtersMW.regions}\n            suggestions={filteredRegions}\n            completeMethod={searchRegion}\n            field=\"name\"\n            placeholder=\"Район\"\n            multiple\n            dropdown\n            selectedItemTemplate={selectedRegionTemplate}\n            itemTemplate={regionTemplate}\n            onChange={filtersMW.setRegions}\n        />\n    )\n}\n\nexport default inject('filtersMW', 'uiStore')(observer(Regions));\n\nconst SelectRegions = styled(AutoComplete)`\n    width: 100%;\n    margin-bottom: 10px;\n    font-size: .8rem !important;\n    ul {\n      ${ SNIPPETS.noOutline };\n      box-shadow: none !important;\n      width: 100%;\n      li {\n        font-size: .8rem !important;\n      }\n    }\n    input {\n    font-size: .8rem !important;\n    }\n    .p-autocomplete-token {\n      margin-bottom: 3px;\n    }\n    \n    .p-placeholder {\n    font-size: 1.2rem !important;\n    }\n    button {\n    background: white;\n    border-right: 1px solid #ced4da;\n    border-top: 1px solid #ced4da;\n    border-bottom: 1px solid #ced4da;\n    border-left: none;\n    }\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport { inject, observer } from \"mobx-react\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { Accordion, AccordionTab } from \"primereact/accordion\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Slider } from \"primereact/slider\";\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { SNIPPETS } from \"consts/styles\";\nimport { InputSwitch } from \"primereact/inputswitch\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport Metros from \"components/Catalog/filters/Metros\";\nimport Regions from \"components/Catalog/filters/Regions\";\nimport {PrimaryButton} from \"components/public/buttons\";\n\nconst searchModeTemplate = ({icon, name}) => {\n    return <div>\n        <i className={icon} /> <span>{name}</span>\n    </div>\n}\nconst apartmentTypeTemplate = ({name}) => {\n    return <span>{name}</span>\n}\n\nconst Filters = ({ filtersMW, userStore, loadApartments }) => {\n    return (\n        <FiltersContainer>\n            {false && <SelectButton\n                options={filtersMW.searchModeOptions}\n                value={filtersMW.searchMode}\n                itemTemplate={searchModeTemplate}\n                onChange={filtersMW.setSearchMode}\n            />}\n            <SelectButton\n                options={filtersMW.apartmentTypes}\n                value={filtersMW.apartmentType}\n                itemTemplate={apartmentTypeTemplate}\n                onChange={filtersMW.setApartmentType}\n            />\n            <Regions />\n            {userStore.user.city.name === 'Київ ❤️' && <Metros />}\n            {filtersMW.apartmentType === 'apartment' && <>\n                <InputWrapper>\n                    <label>Кількість кімнат</label>\n                    <CheckboxWrapper>\n                        <Checkbox checked={filtersMW.roomCount.includes('1')} value={'1'} onChange={filtersMW.setRoomCount}/>\n                        <span>1</span>\n                    </CheckboxWrapper>\n                    <CheckboxWrapper>\n                        <Checkbox checked={filtersMW.roomCount.includes('2')} value={'2'} onChange={filtersMW.setRoomCount}/>\n                        <span>2</span>\n                    </CheckboxWrapper>\n                    <CheckboxWrapper>\n                        <Checkbox checked={filtersMW.roomCount.includes('3')} value={'3'} onChange={filtersMW.setRoomCount}/>\n                        <span>3</span>\n                    </CheckboxWrapper>\n                    <CheckboxWrapper>\n                        <Checkbox checked={filtersMW.roomCount.includes('4+')} value={'4+'} onChange={filtersMW.setRoomCount}/>\n                        <span>4+</span>\n                    </CheckboxWrapper>\n                </InputWrapper>\n            </>}\n            <InputWrapper>\n                <label>Ціна</label>\n                <Slider\n                    style={{marginTop: 10}}\n                    value={filtersMW.prices}\n                    min={0}\n                    max={filtersMW.maxPrice}\n                    onChange={filtersMW.setPrice}\n                    step={100}\n                    range\n                />\n            </InputWrapper>\n            <InputGroup>\n                <span className=\"p-inputgroup-addon\">Від</span>\n                <InputNumber\n                    value={filtersMW.prices[0]}\n                    max={filtersMW.maxPrice}\n                    min={0}\n                    step={100}\n                    suffix=\"UAH\"\n                    onChange={e => {filtersMW.setPrice({min: e.value})}}\n                    showButtons\n                />\n                <span className=\"p-inputgroup-addon\">До</span>\n                <InputNumber\n                    value={filtersMW.prices[1] === filtersMW.maxPrice ? null : filtersMW.prices[1]}\n                    max={filtersMW.maxPrice}\n                    min={0}\n                    step={100}\n                    suffix=\"UAH\"\n                    onChange={e => {filtersMW.setPrice({max: e.value})}}\n                    showButtons\n                />\n            </InputGroup>\n            <AccordionWrapper\n                activeIndex={filtersMW.isAdditionalFiltersExpanded ? 0 : null}\n                onTabChange={filtersMW.toggleAdditionalFilters}\n            >\n                <AccordionTab header={'Додаткові параметри'}>\n                    <InputWrapperWithFloatLabel>\n                        <InputText id=\"address\" value={filtersMW.address} onChange={filtersMW.setAddress} placeholder=\" \" />\n                        <label htmlFor=\"name\">Де?</label>\n                    </InputWrapperWithFloatLabel>\n                    <label>Площа</label>\n                    <InputWrapper style={{marginTop: 0}}>\n                        <InputGroup>\n                            <span className=\"p-inputgroup-addon\">Від</span>\n                            <InputNumber\n                                value={filtersMW.square[0]}\n                                min={0}\n                                suffix=\" м2\"\n                                onChange={filtersMW.setMinSquare}\n                                showButtons\n                            />\n                            <span className=\"p-inputgroup-addon\">До</span>\n                            <InputNumber\n                                value={filtersMW.square[1]}\n                                min={0}\n                                suffix=\" м2\"\n                                onChange={filtersMW.setMaxSquare}\n                                showButtons\n                            />\n                        </InputGroup>\n                    </InputWrapper>\n                    <SwitchInputWrapper>\n                        <span>Тільки перевірені квартири</span>\n                        <InputSwitch checked={filtersMW.onlyModerated} onChange={filtersMW.setOnlyModerated}/>\n                    </SwitchInputWrapper>\n                    <SwitchInputWrapper>\n                        <span>Має відео-огляд</span>\n                        <InputSwitch checked={filtersMW.withVideo} onChange={filtersMW.setWithVideo}/>\n                    </SwitchInputWrapper>\n                </AccordionTab>\n            </AccordionWrapper>\n            <PrimaryButton onClick={loadApartments}>Шукати</PrimaryButton>\n        </FiltersContainer>\n    )\n}\n\nexport default inject('filtersMW', 'userStore')(observer(Filters));\n\nconst FiltersContainer = styled.div`\n  display: grid;\n  justify-content: center;\n  height: max-content;\n  padding: 20px 20px 50vh 20px;\n  width: 100%;\n  max-width: 400px;\n  font-size: .8rem !important;\n  .p-highlight {\n    background: ${props => props.theme.colors.primary.main} !important;\n    color: ${props => props.theme.colors.primary.text} !important;\n    &:hover {\n      background: ${props => props.theme.colors.primary.hover} !important;\n    }\n  }\n  .p-buttonset {\n    margin-bottom: 20px;\n    justify-self: center;\n    width: 100%;\n    .p-button {\n      width: 50%;\n      justify-content: center;\n    }\n  }\n`\n\nconst InputWrapperWithFloatLabel = styled.div.attrs(() => ({\n    className: 'p-float-label'\n}))`\n  margin-top: 35px;\n  \n    label {\n      color: ${props => props.theme.colors.text.general} !important;\n      font-size: .8rem !important;\n    }\n    input {\n      width: 100%;\n    }\n    input:not(:placeholder-shown)+label {\n      top: -.75rem !important;\n    }\n`\nconst InputWrapper = styled.div`\n  margin: 15px 0;\n`\n\nconst InputGroup = styled.div.attrs(() => ({\n    className: 'p-inputgroup'\n}))`\n  margin-top: 15px;\n  @media(max-width: 600px) {\n    display: grid;\n    grid-template-columns: max-content 1fr;\n  }\n  .p-inputnumber button {\n    ${SNIPPETS.noOutline};\n    background: rgba(127,127,127,.2);\n    border-color: rgba(127,127,127,.3);\n  }\n`\nconst SwitchInputWrapper = styled.div`\n  margin-top: 15px;\n  margin-bottom: 15px;\n  display: grid;\n  grid-template-columns: 1fr 48px;\n`\n\nconst AccordionWrapper = styled(Accordion)`\n  .p-accordion-header a {\n    background: white !important;\n    border: none !important;\n    border-radius: 0 !important;\n    padding-left: 0 !important;\n    ${SNIPPETS.noOutline};\n  }\n  .p-accordion-content {\n    border: none !important;\n    padding: 0 !important;\n    font-size: .8rem !important;\n  }\n  \n`;\n\nconst CheckboxWrapper = styled.label`\n  vertical-align: center;\n  display: block;\n  width: max-content;\n  span {\n    margin-left: 5px;\n    line-height: 20px;\n    vertical-align: bottom;\n  }\n`;","import React from 'react';\nimport styled from \"styled-components\";\nimport { inject, observer } from \"mobx-react\";\nimport { Sidebar } from \"primereact/sidebar\";\nimport { Card } from \"primereact/card\";\n\nconst DynamicFiltersPane = ({children, uiStore}) => {\n    return (\n        <Container>\n            <Card className=\"lg\">{children}</Card>\n            <div className=\"sm\">\n                <FloatingButton onClick={uiStore.toggleFilters}>\n                    <i className='bx bx-filter'/>\n                </FloatingButton>\n                <SidebarPanel visible={uiStore.isFiltersVisible} onHide={uiStore.toggleFilters}>\n                    {children}\n                </SidebarPanel>\n            </div>\n        </Container>\n    )\n}\n\nexport default inject('uiStore')(observer(DynamicFiltersPane));\n\nconst Container = styled.div`\n  @media(min-width: 987px) {\n    .lg { display: block; }\n    .sm { visibility: hidden }\n  }\n\n  @media(max-width: 987px) {\n    .lg { display: none; }\n    .sm { visibility: visible }\n  }\n`;\n\nconst SidebarPanel = styled(Sidebar)`\n  z-index: 1000;\n  width: max-content;\n  max-width: 100%;\n  overflow: auto;\n`;\n\nconst FloatingButton = styled.button`\n  background: white;\n  font-size: 3rem;\n  line-height: .8;\n  padding: 0.2rem;\n  color: ${props => props.theme.colors.text.general};\n  box-shadow: 0 0 2px 2px #ccc;\n  cursor: pointer;\n  position: fixed;\n  bottom: 30px;\n  left: 30px;\n  border: none;\n  border-radius: 50%;\n  z-index: 5;\n\n  &:hover {\n    background: #fafafa;\n    box-shadow: 0 0 4px 4px #ccc;\n  }\n`;","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { inject, observer } from \"mobx-react\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport CatalogItem from \"components/Catalog/CatalogItem\";\nimport Filters from \"components/Catalog/filters/Filters\";\nimport CatalogItemSceleton from \"components/Catalog/CatalogItemSceleton\";\nimport DynamicFiltersPane from \"components/public/DynamicFiltersPane\";\nimport { Paginator } from \"primereact/paginator\";\n\n\nconst sceletons = <>{Array(24).fill(<CatalogItemSceleton/>)}</>\n\nconst Catalog = ({ catalogStore }) => {\n\n    const containerRef = useRef(null);\n\n    useEffect(() => {\n        if (!catalogStore.apartments.length)\n            catalogStore.loadApartmentsFromAPI();\n    }, [ catalogStore, catalogStore.apartments.length ])\n    return (\n        <Container ref={containerRef}>\n            <h2>Оренда квартир без посередників</h2>\n            <Content>\n                <DynamicFiltersPane>\n                    <Filters loadApartments={catalogStore.loadApartmentsFromAPI}/>\n                </DynamicFiltersPane>\n                <ApartmentsContainer>\n                    {catalogStore.state === 'loading' && sceletons}\n                    {catalogStore.state === 'ready' && catalogStore.apartments && catalogStore.apartments.length === 0 && <h1>Схоже, що за вашим запитом не знайдено жодної квартири :(</h1>}\n                    {catalogStore.state === 'ready' && catalogStore.apartments && catalogStore.apartments.map(el => <CatalogItem key={el._id} apartment={el}/>)}\n                </ApartmentsContainer>\n                <span/>\n                {catalogStore.apartmentsCount > catalogStore.limit && catalogStore.state === 'ready' && <PaginatorContainer>\n                    <Paginator\n                        first={catalogStore.offset}\n                        rows={catalogStore.limit}\n                        totalRecords={catalogStore.apartmentsCount}\n                        rowsPerPageOptions={[12, 24, 36]}\n                        onPageChange={e => {\n                            window.scrollTo(0,0);\n                            catalogStore.setPageData(e);\n                        }}\n                    />\n                </PaginatorContainer>\n                }\n            </Content>\n        </Container>\n    )\n}\n\nexport default inject('catalogStore')(observer(Catalog));\n\nconst Container = styled.div`\n  max-width: calc(${props => props.theme.consts.containerWidth} + 400px);\n  margin: auto;\n  padding: 20px;\n`;\n\nconst Content = styled.div`\n  display: grid;\n  \n  @media(min-width: 987px) {\n    grid-template-columns: 400px 1fr;\n  }\n`;\n\nconst ApartmentsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n  h1 {\n    width: 90%;\n  }\n`;\n\nconst PaginatorContainer = styled.div`\n  margin: 20px 0;\n`;"],"sourceRoot":""}